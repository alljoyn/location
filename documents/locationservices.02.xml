<?xml version="1.0"?>
<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="/org/alljoyn/locationservices" xsi:noNamespaceSchemaLocation="https://allseenalliance.org/schemas/introspect.xsd">
  <interface name="org.alljoyn.locationservices">
    <property name="Version" type="q" access="read"/>
    <struct name="defaultPrivacyPolicy">
      <field name="presencePolicy" type="u"/>
      <field name="proximityPolicy" type="u"/>
      <field name="locationPolicy" type="u"/>
      <filed name="containmentPolicy" type="u"/>
    </struct>
    <struct name="Entity">
      <field name="entityId" type="s"/>
      <field name="entityMAC" type="s"/>
    </struct>
    <dict name="Group">
      <key type="s"/>
      <value type="[Entity]"/>
    </dict>
    <!--
    This syntax is not yet supported, it maybe in 15.04
	<enum name="privacyPolicy">
	    <enumerator name="ALLOW"    value="0"/>
	    <enumerator name="DISALLOW" value="1"/>
	    <enumerator name="CALLBACK" value="2"/>
	</enum>
        <struct name="defaultPrivacyPolicy">
            <field name="presencePolicy"    type="[privacyPolicy]"/>
	    <field name="proximityPolicy"   type="[privacyPolicy]"/>
	    <field name="locationPolicy"    type="[privacyPolicy]"/>
	    <filed name="containmentPolicy" type="[privacyPolicy]"/>
	</struct>
-->
    <method name="SetDefaultPrivacyPolicy">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="policy" type="[defaultPrivacyPolicy]" direction="in"/>
    </method>
    <method name="EnityWhitelistAdd">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="whitelist" type="as" direction="in"/>
    </method>
    <method name="EnityBlacklistAdd">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="blacklist" type="as" direction="in"/>
    </method>
    <method name="GroupWhitelistAdd">
      <arg name="groupId" type="s" direction="in"/>
      <arg name="whitelist" type="as" direction="in"/>
    </method>
    <method name="GroupBlacklistAdd">
      <arg name="groupId" type="s" direction="in"/>
      <arg name="blacklist" type="as" direction="in"/>
    </method>
    <method name="EnityWhitelistDelete">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="whitelist" type="as" direction="in"/>
    </method>
    <method name="EnityBlacklistDelete">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="blacklist" type="as" direction="in"/>
    </method>
    <method name="GroupWhitelistDelete">
      <arg name="groupId" type="s" direction="in"/>
      <arg name="whitelist" type="as" direction="in"/>
    </method>
    <method name="GroupBlacklistDelete">
      <arg name="groupId" type="s" direction="in"/>
      <arg name="blacklist" type="as" direction="in"/>
    </method>
    <method name="GetGroupWhitelist">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="whitelist" type="as" direction="out"/>
    </method>
    <method name="GetGroupBlacklist">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="blacklist" type="as" direction="out"/>
    </method>
  </interface>
<!--   <node name="presence">-->
    <interface name="org.alljoyn.locationservices.presence">
    <property name="Version" type="q" access="read"/>
      <struct name="Entity">
        <field name="entityId" type="s"/>
        <field name="entityMAC" type="s"/>
      </struct>
      <method name="SubscribeForEntity">
        <arg name="entity" type="[Entity]" direction="in"/>
      </method>
      <method name="SubscibeForEntityList">
        <arg name="entities" type="a[Entity]" direction="in"/>
      </method>
      <method name="SubscibeForEntityGroup">
        <arg name="entityGroup" type="s" direction="in"/>
      </method>
      <method name="SubscribeAll">
    </method>
      <method name="UnsubscribeForEntity">
        <arg name="entity" type="[Entity]" direction="in"/>
      </method>
      <method name="UnsubscribeForEntityList">
        <arg name="entities" type="a[Entity]" direction="in"/>
      </method>
      <method name="UnsubscibeForEntityGroup">
        <arg name="EntityGroup" type="s" direction="in"/>
      </method>
      <method name="UnsubscribeAll">
    </method>
      <method name="SetPresence">
        <arg name="entity" type="[Entity]" direction="in"/>
        <arg name="isPresent" type="b" direction="in"/>
      </method>
      <method name="QueryPresence">
        <arg name="entity" type="[Entity]" direction="in"/>
        <arg name="present" type="b" direction="out"/>
      </method>
      <method name="QueryGroupPresence">
        <arg name="EntityGroup" type="s" direction="in"/>
        <arg name="presentEntities" type="a[Entity]" direction="out"/>
      </method>
      <method name="QueryAllPresence">
        <arg name="presentEntities" type="a[Entity]" direction="out"/>
      </method>
      <signal name="present">
        <arg name="entity" type="[Entity]" direction="out"/>
        <arg name="isPresent" type="b" direction="out"/>
      </signal>
    </interface>
<!--  </node>
  <node name="proximity"> -->
    <interface name="org.alljoyn.locationservices.proximity">
    <property name="Version" type="q" access="read"/>
    <struct name="Entity">
      <field name="entityId" type="s"/>
      <field name="entityMAC" type="s"/>
    </struct>

    <!--
subscribe for events that occur when firstEntity and secondEntity are in proximity. 
Events are only sent again if the proximity change is  more than deltaDistance (measured in cm)
-->
    <method name="SubscribeEntityDistanceTracking">
      <arg name="firstEntity" type="[Entity]" direction="in"/>
      <arg name="secondEntity" type="[Entity]" direction="in"/>
      <arg name="distanceDelta" type="i" direction="in"/>
    </method>
    <!--
send a signal when the two entities are less than Distance from each other
e.g, let me know when my son is near the fridge
-->
    <method name="SubscribeEntityGeofenceTracking">
      <arg name="firstEntity" type="[Entity]" direction="in"/>
      <arg name="secondEntity" type="[Entity]" direction="in"/>
      <arg name="distance" type="i" direction="in"/>
    </method>
    <!--
send a notification when any other Entity is within a specified
distance to the passed Entity
e.g., let me know when anything gets near the fridge
-->
    <method name="SubscribeForAnyProximateEntity">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="distance" type="i" direction="in"/>
    </method>
    <method name="UnsubscribeEntityDistanceTracking">
      <arg name="firstEntity" type="(ss)" direction="in"/>
      <arg name="secondEntity" type="[Entity]" direction="in"/>
    </method>
    <method name="UnsubscribeEntityGeofenceTracking">
      <arg name="firstEntity" type="(ss)" direction="in"/>
      <arg name="secondEntity" type="(ss)" direction="in"/>
      <arg name="Distance" type="i" direction="in"/>
    </method>
    <method name="UnsubscribeForAnyProximateEntity">
      <arg name="entity" type="[Entity]" direction="in"/>
    </method>
    <!-- server side API -->
    <method name="SetProximityDistance">
      <arg name="firstEntity" type="[Entity]" direction="in"/>
      <arg name="secondEntity" type="[Entity]" direction="in"/>
      <arg name="distance" type="i" direction="in"/>
      <arg name="distanceMultiplier" type="i" direction="in"/>
      <arg name="accuracy" type="i" direction="in"/>
      <arg name="accuracyMultiplier" type="i" direction="in"/>
    </method>
    <method name="SetDefaultServiceEntity">
      <arg name="myEntity" type="[Entity]" direction="in"/>
    </method>
    <method name="SetDefaultProximityAccuracy">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="accuracy" type="i" direction="in"/>
      <arg name="accuracyMultiplier" type="i" direction="in"/>
    </method>
    <method name="QueryProximity">
      <arg name="firstEntity" type="[Entity]" direction="in"/>
      <arg name="secondEntity" type="[Entity]" direction="in"/>
      <arg name="distance" type="i" direction="out"/>
      <arg name="distanceMultiplier" type="i" direction="out"/>
      <arg name="accuracy" type="i" direction="out"/>
      <arg name="accuracyMultiplier" type="i" direction="out"/>
    </method>
    <!-- gets all the entities that are within a specified distance -->
    <method name="QueryAllProximity">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="distance" type="i" direction="in"/>
      <arg name="distanceMultiplier" type="i" direction="in"/>
      <arg name="nearbyEntities" type="a[Entity]" direction="out"/>
    </method>
    <signal name="proximity">
      <arg name="firstEntity" type="[Entity]" direction="out"/>
      <arg name="secondEntity" type="[Entity]" direction="out"/>
      <arg name="distance" type="i" direction="out"/>
      <arg name="distanceMultiplier" type="i" direction="out"/>
      <arg name="accuracy" type="i" direction="out"/>
      <arg name="accuracyMultiplier" type="i" direction="out"/>
    </signal>
    </interface>
<!--  </node>
  <node name="location"> -->
    <interface name="org.alljoyn.locationservices.location">
    <property name="Version" type="q" access="read"/>
    <struct name="Entity">
      <field name="entityId" type="s"/>
      <field name="entityMAC" type="s"/>
    </struct>

    <struct name="wgs84Data">
      <field name="longitude" type="i"/>
      <field name="latitude" type="i"/>
      <field name="altitude" type="i"/>
    </struct>
    <struct name="locationOriginData"
	field name="origin" type="s"
	field name="x" type="i"
	field name="y" type="i"
	field name="z" type="i"
	</struct>
    <method name="SubscribeForEntityLocation">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="updateInterval" type="i" direction="in"/>
      <arg name="distanceDelta" type="i" direction="in"/>
      <arg name="distanceMultiplier" type="i" direction="in"/>
    </method>
    <method name="SubscribeForEntyListLocation">
      <arg name="entities" type="a[Entity]" direction="in"/>
      <arg name="updateInterval" type="i" direction="in"/>
      <arg name="distanceDelta" type="i" direction="in"/>
      <arg name="distanceMultiplier" type="i" direction="in"/>
      <!--- power is an enum of HIGH, LOW or UNSPECIFIED -->
      <arg name="powerPreference" type="u" direction="in"/>
      <!--  Accuracy is an enum of HIGH, LOW or UNPSECIFIED -->
      <arg name="accuracyPreference" type="u" diretion="in"/>

    </method>
    <method name="UnsubscribeForEntityLocation">
      <arg name="entity" type="[Entity]" direction="in"/>
      <!--- power is an enum of HIGH, LOW or UNSPECIFIED -->
      <arg name="powerPreference" type="u" direction="in"/>
      <!--  Accuracy is an enum of HIGH, LOW or UNPSECIFIED -->
      <arg name="accuracyPreference" type="u" diretion="in"/>

    </method>
    <method name="UnsubscribeForEntityListLocation">
      <arg name="entities" type="a[Entity]" direction="in"/>
      <!--- power is an enum of HIGH, LOW or UNSPECIFIED -->
      <arg name="powerPreference" type="u" direction="in"/>
      <!--  Accuracy is an enum of HIGH, LOW or UNPSECIFIED -->
      <arg name="accuracyPreference" type="u" diretion="in"/>
    </method>
    <method name="SetLocation">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="location" type="[wgs84Data]" direction="in"/>
      <arg name="horizontalAccuracy" type="i" direction="out"/>
      <arg name="horizontalAccuracyMultiplier" type="i" direction="out"/>
      <arg name="verticalAccuracy" type="i" direction="out"/>
      <arg name="virticalAccuracyMultiplier" type="i" direction="out"/>
    </method>
    <method name="SetDefaultLocationAccuracy">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="horizontalAccuracy" type="i" direction="in"/>
      <arg name="horizontalAccuracyMultiplier" type="i" direction="in"/>
      <arg name="verticalAccuracy" type="i" direction="in"/>
      <arg name="verticalAccuracyMultiplier" type="i" direction="in"/>
    </method>
    <method name="QueryLocation">
      <arg name="entity" type="[Entity]" direction="in"/>
      <arg name="location" type="[wgs84Data]" direction="out"/>
      <arg name="horizontalAccuracy" type="i" direction="out"/>
      <arg name="horizontalAccuracyMultiplier" type="i" direction="out"/>
      <arg name="verticalAccuracy" type="i" direction="out"/>
      <arg name="verticalAccuracyMultiplier" type="i" direction="out"/>
      <!--- power is an enum of HIGH, LOW or UNSPECIFIED -->
      <arg name="powerPreference" type="u" direction="in"/>
      <!--  Accuracy is an enum of HIGH, LOW or UNPSECIFIED -->
      <arg name="accuracyPreference" type="u" diretion="in"/>
    </method>
    <method name="QueryAllLocation">
      <arg name="location" type="[wgs84Data]" direction="in"/>
      <arg name="horizontalDelta" type="i" direction="in"/>
      <arg name="horizontalDeltaMultiplier" type="i" direction="in"/>
      <arg name="verticalDelta" type="i" direction="in"/>
      <arg name="verticalDeltaMultiplier" type="i" direction="in"/>
      <arg name="nearbyEntities" type="a[Entity]" direction="out"/>
    </method>
    <signal name="location">
      <arg name="Entity" type="[Entity]" direction="out"/>
      <arg name="location" type="[wgs84Data]" direction="out"/>
      <arg name="horizontalAccuracy" type="i" direction="out"/>
      <arg name="horizonalAccuracyMultiplier" type="i" direction="out"/>
      <arg name="verticalAccuracy" type="i" direction="out"/>
      <arg name="verticalAccuracyMultiplier" type="i" direction="out"/>
    </signal>
    </interface>
<!--  </node>-->
</node>
